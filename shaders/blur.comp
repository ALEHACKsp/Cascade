#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba32f) uniform readonly image2D inputImage;
layout (binding = 1, rgba32f) uniform image2D resultImage;

layout(push_constant) uniform pushConstants {
    layout(offset = 0) float bRed;
    layout(offset = 4) float bGreen;
    layout(offset = 8) float bBlue;
    layout(offset = 12) float bAlpha;
    layout(offset = 16) float strength;
    layout(offset = 20) float shaderPass;
} pc;

int width = imageSize(inputImage).x;
int height = imageSize(inputImage).y;

int strength = int(pc.strength);

int div = 2 * strength + 1;

void main()
{
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

    vec4 pixel = imageLoad(inputImage, pixelCoords.xy).rgba;

    vec4 sum = pixel * abs(vec4(pc.bRed, pc.bGreen, pc.bBlue, pc.bAlpha) - 1.0);

    if (pc.strength != 0)
    {
        if (pc.shaderPass == 0.0)
        {
            for (int i = -strength; i <= strength; ++i)
            {
                if (pixelCoords.x + i < 0 || pixelCoords.x + i > width)
                {
                    sum += imageLoad(inputImage, ivec2(pixelCoords.x - i, pixelCoords.y)).rgba;
                }
                else
                {
                    sum += imageLoad(inputImage, ivec2(pixelCoords.x + i, pixelCoords.y)).rgba;
                }
            }
        }
        else
        {
            for (int i = -strength; i <= strength; ++i)
            {
                if (pixelCoords.y + i < 0 || pixelCoords.y + i > height)
                {
                    sum += imageLoad(inputImage, ivec2(pixelCoords.x, pixelCoords.y - i)).rgba;
                }
                else
                {
                    sum += imageLoad(inputImage, ivec2(pixelCoords.x, pixelCoords.y + i)).rgba;
                }
            }
        }

        sum = sum / div;

        if (pc.bRed == 0.0)
        {
            sum.r = pixel.r;
        }
        if (pc.bGreen == 0.0)
        {
            sum.g = pixel.g;
        }
        if (pc.bBlue == 0.0)
        {
            sum.b = pixel.b;
        }
        if (pc.bAlpha == 0.0)
        {
            sum.a = pixel.a;
        }
        imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), sum);
    }
    else
    {
        imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), pixel);
    }


}
